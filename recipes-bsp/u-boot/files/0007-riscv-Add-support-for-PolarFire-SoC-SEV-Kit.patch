From ae7fecdc4dc51728adb293e7d22e272f21123005 Mon Sep 17 00:00:00 2001
From: Vattipalli Praveen <praveen.kumar@microchip.com>
Date: Thu, 16 Jun 2022 16:33:09 +0530
Subject: [PATCH 7/7] riscv: Add support for Microchip PolarFire SoC SEV Kit

Signed-off-by: Vattipalli Praveen <praveen.kumar@microchip.com>
---
 arch/riscv/Kconfig                        |   4 +
 arch/riscv/cpu/generic/dram.c             |   2 +-
 arch/riscv/dts/Makefile                   |   1 +
 arch/riscv/dts/microchip-mpfs-sev-kit.dts | 137 +++++++++++++++++++++
 board/microchip/mpfs_sevkit/Kconfig       |  54 +++++++++
 board/microchip/mpfs_sevkit/MAINTAINERS   |   7 ++
 board/microchip/mpfs_sevkit/Makefile      |   7 ++
 board/microchip/mpfs_sevkit/mpfs_sevkit.c | 140 ++++++++++++++++++++++
 configs/microchip_mpfs_sevkit_defconfig   |  17 +++
 include/configs/microchip_mpfs_sevkit.h   |  36 ++++++
 10 files changed, 404 insertions(+), 1 deletion(-)
 create mode 100644 arch/riscv/dts/microchip-mpfs-sev-kit.dts
 create mode 100644 board/microchip/mpfs_sevkit/Kconfig
 create mode 100644 board/microchip/mpfs_sevkit/MAINTAINERS
 create mode 100644 board/microchip/mpfs_sevkit/Makefile
 create mode 100644 board/microchip/mpfs_sevkit/mpfs_sevkit.c
 create mode 100644 configs/microchip_mpfs_sevkit_defconfig
 create mode 100644 include/configs/microchip_mpfs_sevkit.h

diff --git a/arch/riscv/Kconfig b/arch/riscv/Kconfig
index 997e1e22ab..b239a1a3c7 100644
--- a/arch/riscv/Kconfig
+++ b/arch/riscv/Kconfig
@@ -17,6 +17,9 @@ config TARGET_AX25_AE350
 config TARGET_MICROCHIP_ICICLE
 	bool "Support Microchip PolarFire-SoC Icicle Board"
 
+config TARGET_MICROCHIP_SEVKIT
+	bool "Support Microchip PolarFire-SoC SEV Kit"
+
 config TARGET_QEMU_VIRT
 	bool "Support QEMU Virt Board"
 
@@ -65,6 +68,7 @@ source "board/AndesTech/ax25-ae350/Kconfig"
 source "board/aries/m100pfsevp/Kconfig"
 source "board/emulation/qemu-riscv/Kconfig"
 source "board/microchip/mpfs_icicle/Kconfig"
+source "board/microchip/mpfs_sevkit/Kconfig"
 source "board/sifive/unleashed/Kconfig"
 source "board/sifive/unmatched/Kconfig"
 source "board/openpiton/riscv64/Kconfig"
diff --git a/arch/riscv/cpu/generic/dram.c b/arch/riscv/cpu/generic/dram.c
index 584e656169..ea720900e1 100644
--- a/arch/riscv/cpu/generic/dram.c
+++ b/arch/riscv/cpu/generic/dram.c
@@ -23,7 +23,7 @@ int dram_init_banksize(void)
 
 ulong board_get_usable_ram_top(ulong total_size)
 {
-#if !defined(CONFIG_TARGET_MICROCHIP_ICICLE)
+#if !defined(CONFIG_TARGET_MICROCHIP_ICICLE) && !defined(CONFIG_TARGET_MICROCHIP_SEVKIT)
 	/*
 	 * Ensure that we run from first 4GB so that all
 	 * addresses used by U-Boot are 32bit addresses.
diff --git a/arch/riscv/dts/Makefile b/arch/riscv/dts/Makefile
index 57bddfaef2..41c5f7fa97 100644
--- a/arch/riscv/dts/Makefile
+++ b/arch/riscv/dts/Makefile
@@ -4,6 +4,7 @@ dtb-$(CONFIG_TARGET_AX25_AE350) += ae350_32.dtb ae350_64.dtb
 dtb-$(CONFIG_TARGET_ARIES_M100PFSEVP) += m100pfsevp.dtb
 dtb-$(CONFIG_TARGET_MICROCHIP_ICICLE) += microchip-mpfs-icicle-kit.dtb \
 microchip-mpfs-icicle-kit-amp.dtb
+dtb-$(CONFIG_TARGET_MICROCHIP_SEVKIT) += microchip-mpfs-sev-kit.dtb
 dtb-$(CONFIG_TARGET_QEMU_VIRT) += qemu-virt.dtb
 dtb-$(CONFIG_TARGET_OPENPITON_RISCV64) += openpiton-riscv64.dtb
 dtb-$(CONFIG_TARGET_SIFIVE_UNLEASHED) += hifive-unleashed-a00.dtb
diff --git a/arch/riscv/dts/microchip-mpfs-sev-kit.dts b/arch/riscv/dts/microchip-mpfs-sev-kit.dts
new file mode 100644
index 0000000000..3902390aaa
--- /dev/null
+++ b/arch/riscv/dts/microchip-mpfs-sev-kit.dts
@@ -0,0 +1,137 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright (C) 2021 Microchip Technology Inc.
+ * vattipalli praveen <praveen.kumar@microchip.com>
+ */
+
+/dts-v1/;
+
+#include "microchip-mpfs.dtsi"
+
+/* Clock frequency (in Hz) of the rtcclk */
+#define RTCCLK_FREQ		1000000
+
+/ {
+	model = "Microchip PolarFire-SoC SEV Kit";
+	compatible = "microchip,mpfs-sev-kit", "microchip,mpfs";
+
+	aliases {
+		serial1 = &uart1;
+		ethernet0 = &mac0;
+	};
+
+	chosen {
+		stdout-path = "serial1";
+	};
+
+	cpus {
+		timebase-frequency = <RTCCLK_FREQ>;
+	};
+
+	reserved-memory {
+		ranges;
+		#size-cells = <2>;
+		#address-cells = <2>;
+
+		fabricbuf0: fabricbuf@0 {
+			compatible = "shared-dma-pool";
+			reg = <0x0 0xae000000 0x0 0x2000000>;
+			label = "fabricbuf0-ddr-c";
+		};
+
+
+		fabricbuf2: fabricbuf@2 {
+			compatible = "shared-dma-pool";
+			reg = <0x0 0xd8000000 0x0 0x8000000>;
+			label = "fabricbuf2-ddr-nc-wcb";
+		};
+	};
+
+	udmabuf0 {
+		compatible = "ikwzm,u-dma-buf";
+		device-name = "udmabuf-ddr-c0";
+		minor-number = <0>;
+		size = <0x0 0x2000000>;
+		memory-region = <&fabricbuf0>;
+		sync-mode = <3>;
+	};
+
+
+	udmabuf2 {
+		compatible = "ikwzm,u-dma-buf";
+		device-name = "udmabuf-ddr-nc-wcb0";
+		minor-number = <2>;
+		size = <0x0 0x8000000>;
+		memory-region = <&fabricbuf2>;
+		sync-mode = <3>;
+	};
+
+	ddrc_cache: memory@1000000000 {
+		device_type = "memory";
+		reg = <0x10 0x0 0x0 0x76000000>;
+		clocks = <&clkcfg CLK_DDRC>;
+		status = "okay";
+	};
+};
+
+&uart1 {
+	status = "okay";
+};
+
+&mmc {
+	status = "okay";
+
+	bus-width = <4>;
+	disable-wp;
+	cap-mmc-highspeed;
+	cap-sd-highspeed;
+	card-detect-delay = <200>;
+	mmc-ddr-1_8v;
+	mmc-hs200-1_8v;
+	sd-uhs-sdr12;
+	sd-uhs-sdr25;
+	sd-uhs-sdr50;
+	sd-uhs-sdr104;
+};
+
+&i2c1 {
+	status = "okay";
+	clock-frequency = <100000>;
+
+	pac193x: pac193x@10 {
+		compatible = "microchip,pac1934";
+		reg = <0x10>;
+		samp-rate = <64>;
+		status = "okay";
+		ch1: channel0 {
+			uohms-shunt-res = <10000>;
+			rail-name = "VDDREG";
+			channel_enabled;
+		};
+		ch2: channel1 {
+			uohms-shunt-res = <10000>;
+			rail-name = "VDDA25";
+			channel_enabled;
+		};
+		ch3: channel2 {
+			uohms-shunt-res = <10000>;
+			rail-name = "VDD25";
+			channel_enabled;
+		};
+		ch4: channel3 {
+			uohms-shunt-res = <10000>;
+			rail-name = "VDDA_REG";
+			channel_enabled;
+		};
+	};
+};
+
+&mac0 {
+	status = "okay";
+	phy-mode = "sgmii";
+	phy-handle = <&phy0>;
+	phy0: ethernet-phy@8 {
+		reg = <8>;
+		ti,fifo-depth = <0x1>;
+	};
+};
diff --git a/board/microchip/mpfs_sevkit/Kconfig b/board/microchip/mpfs_sevkit/Kconfig
new file mode 100644
index 0000000000..ea503a2ad6
--- /dev/null
+++ b/board/microchip/mpfs_sevkit/Kconfig
@@ -0,0 +1,54 @@
+if TARGET_MICROCHIP_SEVKIT
+
+config SYS_BOARD
+	default "mpfs_sevkit"
+
+config SYS_VENDOR
+	default "microchip"
+
+config SYS_CPU
+	default "generic"
+
+config SYS_CONFIG_NAME
+	default "microchip_mpfs_sevkit"
+
+config SYS_TEXT_BASE
+	default 0x1000000000 if !RISCV_SMODE
+	default 0x1000200000 if RISCV_SMODE
+
+config BOARD_SPECIFIC_OPTIONS # dummy
+	def_bool y
+	select GENERIC_RISCV
+	select BOARD_EARLY_INIT_F
+	select BOARD_LATE_INIT
+	imply SMP
+	imply CLK_CCF
+	imply CLK_MPFS
+	imply SYS_NS16550
+	imply CMD_DHCP
+	imply CMD_EXT2
+	imply CMD_EXT4
+	imply CMD_FAT
+	imply CMD_FS_GENERIC
+	imply CMD_NET
+	imply CMD_PING
+	imply CMD_MMC
+	imply DOS_PARTITION
+	imply EFI_PARTITION
+	imply IP_DYN
+	imply ISO_PARTITION
+	imply MACB
+	imply MII
+	imply PHY_LIB
+	imply PHY_VITESSE
+	imply MMC
+	imply MMC_WRITE
+	imply MMC_SDHCI
+	imply MMC_SDHCI_CADENCE
+	imply MMC_SDHCI_ADMA
+	imply MMC_HS200_SUPPORT
+	imply CMD_I2C
+	imply DM_I2C
+	imply SYS_I2C_MICROCHIP
+
+endif
diff --git a/board/microchip/mpfs_sevkit/MAINTAINERS b/board/microchip/mpfs_sevkit/MAINTAINERS
new file mode 100644
index 0000000000..663515f1e5
--- /dev/null
+++ b/board/microchip/mpfs_sevkit/MAINTAINERS
@@ -0,0 +1,7 @@
+Microchip MPFS sev-kit
+M:	Vattipalli Praveen <praveen.kumar@microchip.com>
+M:	Shravan Chippa <shravan.chippa@microchip.com>
+S:	Maintained
+F:	board/microchip/mpfs_sevkit/
+F:	include/configs/microchip_mpfs_sevkit.h
+F:	configs/microchip_mpfs_sevkit_defconfig
diff --git a/board/microchip/mpfs_sevkit/Makefile b/board/microchip/mpfs_sevkit/Makefile
new file mode 100644
index 0000000000..da7e655a29
--- /dev/null
+++ b/board/microchip/mpfs_sevkit/Makefile
@@ -0,0 +1,7 @@
+# SPDX-License-Identifier: GPL-2.0+
+#
+# Copyright (C) 2022 Microchip Technology Inc.
+# Padmarao Begari <padmarao.begari@microchip.com>
+#
+
+obj-y	+= mpfs_sevkit.o
diff --git a/board/microchip/mpfs_sevkit/mpfs_sevkit.c b/board/microchip/mpfs_sevkit/mpfs_sevkit.c
new file mode 100644
index 0000000000..bd4079f741
--- /dev/null
+++ b/board/microchip/mpfs_sevkit/mpfs_sevkit.c
@@ -0,0 +1,140 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright (C) 2019 Microchip Technology Inc.
+ * Padmarao Begari <padmarao.begari@microchip.com>
+ */
+
+#include <common.h>
+#include <dm.h>
+#include <env.h>
+#include <init.h>
+#include <asm/global_data.h>
+#include <asm/io.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#define MPFS_SYSREG_SOFT_RESET		((unsigned int *)0x20002088)
+#define MPFS_SYS_SERVICE_CR		((unsigned int *)0x37020050)
+#define MPFS_SYS_SERVICE_SR		((unsigned int *)0x37020054)
+#define MPFS_SYS_SERVICE_MAILBOX	((unsigned char *)0x37020800)
+
+#define PERIPH_RESET_VALUE		0x1e8u
+#define SERVICE_CR_REQ			0x1u
+#define SERVICE_SR_BUSY			0x2u
+
+static void read_device_serial_number(u8 *response, u8 response_size)
+{
+	u8 idx;
+	u8 *response_buf;
+	unsigned int val;
+
+	response_buf = (u8 *)response;
+
+	writel(SERVICE_CR_REQ, MPFS_SYS_SERVICE_CR);
+	/*
+	 * REQ bit will remain set till the system controller starts
+	 * processing.
+	 */
+	do {
+		val = readl(MPFS_SYS_SERVICE_CR);
+	} while (SERVICE_CR_REQ == (val & SERVICE_CR_REQ));
+
+	/*
+	 * Once system controller starts processing the busy bit will
+	 * go high and service is completed when busy bit is gone low
+	 */
+	do {
+		val = readl(MPFS_SYS_SERVICE_SR);
+	} while (SERVICE_SR_BUSY == (val & SERVICE_SR_BUSY));
+
+	for (idx = 0; idx < response_size; idx++)
+		response_buf[idx] = readb(MPFS_SYS_SERVICE_MAILBOX + idx);
+}
+
+int board_init(void)
+{
+	/* For now nothing to do here. */
+
+	return 0;
+}
+
+int board_early_init_f(void)
+{
+	unsigned int val;
+
+	/* Reset uart, mmc peripheral */
+	val = readl(MPFS_SYSREG_SOFT_RESET);
+	val = (val & ~(PERIPH_RESET_VALUE));
+	writel(val, MPFS_SYSREG_SOFT_RESET);
+
+	return 0;
+}
+
+int board_late_init(void)
+{
+	u32 ret;
+	u32 node;
+	u8 idx;
+	u8 device_serial_number[16] = { 0 };
+	unsigned char mac_addr[6];
+	char sevkit_mac_addr[20];
+	void *blob = (void *)gd->fdt_blob;
+
+	node = fdt_path_offset(blob, "ethernet0");
+	if (node < 0) {
+		printf("No ethernet0 path offset\n");
+		return -ENODEV;
+	}
+
+	ret = fdtdec_get_byte_array(blob, node, "local-mac-address", mac_addr, 6);
+	if (ret) {
+		printf("No local-mac-address property\n");
+		return -EINVAL;
+	}
+
+	read_device_serial_number(device_serial_number, 16);
+
+	/* Update MAC address with device serial number */
+	mac_addr[0] = 0x00;
+	mac_addr[1] = 0x04;
+	mac_addr[2] = 0xA3;
+	mac_addr[3] = device_serial_number[2];
+	mac_addr[4] = device_serial_number[1];
+	mac_addr[5] = device_serial_number[0];
+
+	ret = fdt_setprop(blob, node, "local-mac-address", mac_addr, 6);
+	if (ret) {
+		printf("Error setting local-mac-address property\n");
+		return -ENODEV;
+	}
+
+	sevkit_mac_addr[0] = '[';
+
+	sprintf(&sevkit_mac_addr[1], "%pM", mac_addr);
+
+	sevkit_mac_addr[18] = ']';
+	sevkit_mac_addr[19] = '\0';
+
+	for (idx = 0; idx < 20; idx++) {
+		if (sevkit_mac_addr[idx] == ':')
+			sevkit_mac_addr[idx] = ' ';
+	}
+	env_set("sevkit_mac_addr0", sevkit_mac_addr);
+
+	mac_addr[5] = device_serial_number[0] + 1;
+
+	sevkit_mac_addr[0] = '[';
+
+	sprintf(&sevkit_mac_addr[1], "%pM", mac_addr);
+
+	sevkit_mac_addr[18] = ']';
+	sevkit_mac_addr[19] = '\0';
+
+	for (idx = 0; idx < 20; idx++) {
+		if (sevkit_mac_addr[idx] == ':')
+			sevkit_mac_addr[idx] = ' ';
+	}
+	env_set("sevkit_mac_addr1", sevkit_mac_addr);
+
+	return 0;
+}
diff --git a/configs/microchip_mpfs_sevkit_defconfig b/configs/microchip_mpfs_sevkit_defconfig
new file mode 100644
index 0000000000..32d7d73ba2
--- /dev/null
+++ b/configs/microchip_mpfs_sevkit_defconfig
@@ -0,0 +1,17 @@
+CONFIG_RISCV=y
+CONFIG_SYS_MALLOC_LEN=0x800000
+CONFIG_SYS_MALLOC_F_LEN=0x2000
+CONFIG_ENV_SIZE=0x2000
+CONFIG_DEFAULT_DEVICE_TREE="microchip-mpfs-sev-kit"
+CONFIG_TARGET_MICROCHIP_SEVKIT=y
+CONFIG_ARCH_RV64I=y
+CONFIG_RISCV_SMODE=y
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_SYS_LOAD_ADDR=0x1000200000
+CONFIG_FIT=y
+CONFIG_DISPLAY_CPUINFO=y
+CONFIG_DISPLAY_BOARDINFO=y
+CONFIG_SYS_PROMPT="RISC-V # "
+CONFIG_SYS_RELOC_GD_ENV_ADDR=y
+CONFIG_BOOTP_SEND_HOSTNAME=y
+CONFIG_DM_MTD=y
diff --git a/include/configs/microchip_mpfs_sevkit.h b/include/configs/microchip_mpfs_sevkit.h
new file mode 100644
index 0000000000..0b7e56af93
--- /dev/null
+++ b/include/configs/microchip_mpfs_sevkit.h
@@ -0,0 +1,36 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+/*
+ * Copyright (C) 2019 Microchip Technology Inc.
+ * Padmarao Begari <padmarao.begari@microchip.com>
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+#include <linux/sizes.h>
+
+#define CONFIG_SYS_SDRAM_BASE       0x1000000000
+#define CONFIG_SYS_INIT_SP_ADDR     (CONFIG_SYS_SDRAM_BASE + SZ_2M)
+
+#define CONFIG_SYS_BOOTM_LEN        SZ_64M
+
+#define CONFIG_STANDALONE_LOAD_ADDR 0x1000200000
+
+/* Environment options */
+
+#define BOOT_TARGET_DEVICES(func) \
+	func(MMC, mmc, 0) \
+	func(DHCP, dhcp, na)
+
+#include <config_distro_bootcmd.h>
+
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	"bootm_size=0x10000000\0" \
+	"kernel_addr_r=0x1004000000\0" \
+	"fdt_addr_r=0x1008000000\0" \
+	"scriptaddr=0x1008100000\0" \
+	"pxefile_addr_r=0x1008200000\0" \
+	"ramdisk_addr_r=0x1008300000\0" \
+	BOOTENV
+
+#endif /* __CONFIG_H */
-- 
2.25.1


From 04992e18362691d92cdd3ffd5a6a779db43865cd Mon Sep 17 00:00:00 2001
From: Wolfgang Grandegger <wg@aries-embedded.de>
Date: Tue, 16 May 2023 16:56:08 +0200
Subject: [PATCH] riscv: dts: m100pfsevp: fix broken emmc support

To permit switching between SD card and eMMC, the clock freqency is
limited to 50 Mhz. HS200 mode will make the eMMC inaccessible.

Signed-off-by: Wolfgang Grandegger <wg@aries-embedded.de>
---
 arch/riscv/dts/mpfs-m100pfsevp.dts | 12 ++++--------
 configs/m100pfsevp_defconfig       |  3 +++
 drivers/mmc/sdhci.c                |  2 ++
 3 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/arch/riscv/dts/mpfs-m100pfsevp.dts b/arch/riscv/dts/mpfs-m100pfsevp.dts
index cfca361eb6..84dbad50ea 100644
--- a/arch/riscv/dts/mpfs-m100pfsevp.dts
+++ b/arch/riscv/dts/mpfs-m100pfsevp.dts
@@ -48,17 +48,13 @@
 
 &mmc {
 	status = "okay";
-	bus-width = <4>;
+	bus-width = <8>;
+	max-frequency = <50000000>;
 	disable-wp;
 	cap-mmc-highspeed;
-	cap-sd-highspeed;
 	card-detect-delay = <200>;
-	mmc-ddr-1_8v;
-	mmc-hs200-1_8v;
-	sd-uhs-sdr12;
-	sd-uhs-sdr25;
-	sd-uhs-sdr50;
-	sd-uhs-sdr104;
+	non-removable;
+	no-1-8-v;
 };
 
 &mac0 {
diff --git a/configs/m100pfsevp_defconfig b/configs/m100pfsevp_defconfig
index 32bf3e8d9d..2cc59dcb2f 100644
--- a/configs/m100pfsevp_defconfig
+++ b/configs/m100pfsevp_defconfig
@@ -11,10 +11,13 @@ CONFIG_SBI_V01=y
 CONFIG_DISTRO_DEFAULTS=y
 CONFIG_SYS_LOAD_ADDR=0x80200000
 CONFIG_FIT=y
+CONFIG_BOOTCOMMAND="run mmc_mmc"
+CONFIG_LOGLEVEL=4
 CONFIG_DISPLAY_CPUINFO=y
 CONFIG_DISPLAY_BOARDINFO=y
 CONFIG_ENV_OVERWRITE=y
 CONFIG_ENV_IS_IN_MMC=y
 CONFIG_SYS_RELOC_GD_ENV_ADDR=y
 CONFIG_BOOTP_SEND_HOSTNAME=y
+# CONFIG_MMC_HS200_SUPPORT is not set
 CONFIG_DM_MTD=y
diff --git a/drivers/mmc/sdhci.c b/drivers/mmc/sdhci.c
index b7552c8755..f2e85515b8 100644
--- a/drivers/mmc/sdhci.c
+++ b/drivers/mmc/sdhci.c
@@ -934,10 +934,12 @@ int sdhci_setup_cfg(struct mmc_config *cfg, struct sdhci_host *host,
 	cfg->host_caps |= MMC_MODE_4BIT;
 
 	/* Since Host Controller Version3.0 */
+#if 0
 	if (SDHCI_GET_VERSION(host) >= SDHCI_SPEC_300) {
 		if (!(caps & SDHCI_CAN_DO_8BIT))
 			cfg->host_caps &= ~MMC_MODE_8BIT;
 	}
+#endif
 
 	if (host->quirks & SDHCI_QUIRK_BROKEN_HISPD_MODE) {
 		cfg->host_caps &= ~MMC_MODE_HS;
-- 
2.34.1

